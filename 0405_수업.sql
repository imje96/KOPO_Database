--p.45 4
SELECT COUNT(*), SUM(COMM), SUM(COMM)/COUNT(*),AVG(COMM),SUM(COMM)/COUNT(COMM) FROM EMP;

SELECT DEPTNO, MAX(SAL), MIN(SAL)
FROM SCOTT.EMP  -- 내 계정 소유의 오브젝트가 아니어도 SCOTT 계정에 접근할 수 있음 
GROUP BY DEPTNO
ORDER BY DEPTNO;

DESC DEPT;

desc v$mystat
select sid from v$mystat;
--1
INSERT INTO DEPT VALUES(50,'연구소1','서울');
--2
INSERT INTO DEPT(DEPTNO,DNAME,LOC) VALUES(51,'연구소2','대전');
--3
SELECT * FROM DEPT;
--4
INSERT INTO DEPT VALUES('중부영업점','대구');
--5
INSERT INTO DEPT(DNAME,LOC) VALUES('중부지점','대구');
--6
INSERT INTO DEPT(DEPTNO,DNAME,LOC) VALUES(52, '북부지점',NULL);
INSERT INTO DEPT(DEPTNO,DNAME,LOC) VALUES(53, '남부지점','');
--8
INSERT INTO DEPT(DEPTNO,DNAME) VALUES(54,'서부지점');
INSERT INTO DEPT(DEPTNO,DNAME) VALUES(55,'남부지점');

--10
COMMIT; 

-- multi table insert
INSERT ALL
    INTO DEPT(DEPTNO, DNAME, LOC) VALUES(55,'Multi','INSERT1')
    INTO DEPT(DEPTNO, DNAME, LOC) VALUES(56,'Multi','INSERT2')
    INTO DEPT(DEPTNO, DNAME, LOC) VALUES(57,'Multi','INSERT3')
SELECT 1 FROM DUAL;
SELECT * FROM DEPT;

ROLLBACK;
SELECT * FROM DEPT;
-- CONDITIONAL INSERT
--1
CREATE TABLE BONUS_2 
AS SELECT * 
FROM BONUS WHERE 1=2; -- 1=2 항상 FALSE이므로 ROW가 빈 테이블 생성하는 것

CREATE TABLE BONUS_3 
AS SELECT * 
FROM BONUS WHERE 1=1; -- 1=2 항상 FALSE이므로 ROW가 빈 테이블 생성하는 것
SELECT * FROM BONUS_3;

DESC BONUS_2;
SELECT * FROM BONUS_2;
-- 2
INSERT ALL
    WHEN COMM > 0 THEN INTO BONUS
    WHEN COMM IS NULL THEN  INTO BONUS_2
    SELECT ENAME, JOB, SAL, COMM FROM EMP WHERE JOB IN('CLERK','SALESMAN');
-- 3
SELECT * FROM BONUS;
SELECT * FROM BONUS_2;
-- 4
ROLLBACK;
-- UPDATE

--1
UPDATE DEPT SET DNAME = ' M연구소' WHERE DEPTNO = 50;
--2
UPDATE DEPT SET DNAME = ' T연구소', LOC='인천' WHERE DEPTNO = 51; 
--3
SELECT * FROM DEPT WHERE DEPTNO IN (50,51);
--4
COMMIT;
--5
UPDATE DEPT SET LOC='미개척지';
--6
SELECT * FROM DEPT;
--7
ROLLBACK;
--8
SELECT * FROM DEPT;
--9
select dname, replace(dname,' ','*') from dept; // dname 컬럼에 공백문자 저장
update dept set dname=trim(dname); // set 절에 함수 사용가능
select dname, replace(dname,' ','*') from dept;
--10
commit; 
-- DELETE
DELETE FROM DEPT WHERE LOC IS NULL OR DEPTNO IS NULL;
SELECT * FROM DEPT;
COMMIT;

--2
DELETE DEPT;
SELECT * FROM DEPT;

--3 
ROLLBACK;
SELECT * FROM DEPT;